; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "DevGrep"
!define PRODUCT_VERSION "1.8.245"
!define PRODUCT_PUBLISHER "Borderline Software, Inc."
!define PRODUCT_WEB_SITE "http://www.borderlinesoftware.com"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\DevGrep.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
; Context menu registry entries

;Required .NET framework
!define MIN_FRA_MAJOR "4"
!define MIN_FRA_MINOR "0"
!define MIN_FRA_BUILD "*"


; MUI 1.67 compatible ------
!include "${NSISDIR}\Contrib\Modern UI 2\MUI2.nsh"

!include WordFunc.nsh
!insertmacro VersionCompare
!include LogicLib.nsh


; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\BuildScripts\license.txt"
; Components page
!insertmacro MUI_PAGE_COMPONENTS
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\DevGrep.exe"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "InstallDevGrep.exe"
InstallDir "$PROGRAMFILES\Borderline Software\DevGrep"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show
Var InstallDotNET
BrandingText "Brian D. Patterson"

Section "Program Files" SEC01
  ;Call CloseApp
  
  
  SetOutPath "$INSTDIR"
  SetOverwrite on
  
  
    ; Begin Check .NET version
  StrCpy $InstallDotNET "No"
  Call CheckFramework
     StrCmp $0 "1" +3
        StrCpy $InstallDotNET "Yes"
      MessageBox MB_OK|MB_ICONINFORMATION "${PRODUCT_NAME} requires that the .NET Framework 4.0 be installed. The latest .NET Framework will be downloaded and installed automatically during installation of ${PRODUCT_NAME}." /SD IDOK
     Pop $0

  ; Get .NET if required
  ${If} $InstallDotNET == "Yes"
     SetDetailsView hide
     inetc::get /caption "Downloading .NET Framework 4.0" /canceltext "Cancel" "http://download.microsoft.com/download/3/6/1/361DAE4E-E5B9-4824-B47F-6421A6C59227/dotNetFx40_Full_x86_x64_SC.exe" "$INSTDIR\dotnetfx.exe" /end
     Pop $1

     ${If} $1 != "OK"
           Delete "$INSTDIR\dotnetfx.exe"
           Abort "Installation cancelled, ${PRODUCT_NAME} requires the .NET 4.0 Framework"
     ${EndIf}

     ExecWait "$INSTDIR\dotnetfx.exe"
     Delete "$INSTDIR\dotnetfx.exe"

     SetDetailsView show
  ${EndIf}
  
  File "..\Obfuscated\DevGrep.exe"
  CreateDirectory "$SMPROGRAMS\DevGrep"
  CreateShortCut "$SMPROGRAMS\DevGrep\DevGrep.lnk" "$INSTDIR\DevGrep.exe"
  CreateShortCut "$DESKTOP\DevGrep.lnk" "$INSTDIR\DevGrep.exe"
  SetOverwrite ifnewer
  File "..\Obfuscated\UpdateCheck.exe"
  File "..\Obfuscated\DevGrep.exe.config"
  File "..\Obfuscated\SmartSearch.dll"
  File "..\Obfuscated\DevGrepResources.dll"
  File "..\Obfuscated\Ionic.Zip.dll"
  File "..\Obfuscated\DGTe.dll"
  File "..\Obfuscated\BLS.TextEditor.dll"
  File "..\Obfuscated\Patterson.Windows.Forms.dll"
  File "..\Obfuscated\RichTextBoxEx.dll"
  File "..\Obfuscated\BLS.JSON.dll"
  File "..\Obfuscated\BLS.Search.Web.dll"
  SetOutPath "$INSTDIR\Templates\"
  File "..\Obfuscated\Templates\Results.html"
  File "..\Obfuscated\Templates\ResultsCompiled.html"
  SetOutPath "$INSTDIR\Themes\"
  File "..\Obfuscated\Themes\SilverBlack.xml"
  File "..\Obfuscated\Themes\WinDefault.xml"
SectionEnd
Section "Context Menu" SEC02
  WriteRegStr HKCR "Directory\shell\DevGrepSearch" "" "DevGrep Search"
  WriteRegStr HKCR "Directory\shell\DevGrepSearch\command" "" "$INSTDIR\DevGrep.exe /search $\"%1$\""
  WriteRegStr HKCR "Drive\shell\DevGrepSearch" "" "DevGrep Search"
  WriteRegStr HKCR "Drive\shell\DevGrepSearch\command" "" "$INSTDIR\DevGrep.exe /search $\"%1$\""
SectionEnd
Section "Register File Types" SEC03
  WriteRegStr HKCR ".dgb" "" "DevGrep.Document"
  WriteRegStr HKCR "DevGrep.Document" "" "DevGrep Search"
  WriteRegStr HKCR "DevGrep.Document\DefaultIcon" "" "$INSTDIR\devgrep.exe,1"
  WriteRegStr HKCR "DevGrep.Document\shell\open\command" "" '"$INSTDIR\devgrep.exe" "%1"'
  ; Tell the shell to reset its icon cache
System::Call 'shell32.dll::SHChangeNotify(i, i, i, i) v (0x08000000, 0, 0, 0)' 
SectionEnd
Section -AdditionalIcons
  SetOutPath $INSTDIR
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateShortCut "$SMPROGRAMS\DevGrep\Website.lnk" "$INSTDIR\${PRODUCT_NAME}.url"
  CreateShortCut "$SMPROGRAMS\DevGrep\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\DevGrep.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\DevGrep.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
  

SectionEnd

; Section descriptions
!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC01} "DevGrep required files."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC02} "Add DevGrep to the right click button of your mouse."
  !insertmacro MUI_DESCRIPTION_TEXT ${SEC03} "Associates DevGrep file types with DevGrep."
!insertmacro MUI_FUNCTION_DESCRIPTION_END

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
;Call un.CloseApp

  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\Themes\SilverBlack.xml"
  Delete "$INSTDIR\Themes\WinDefault.xml"
  Delete "$INSTDIR\Templates\ResultsCompiled.html"
  Delete "$INSTDIR\Templates\Results.html"
  Delete "$INSTDIR\RichTextBoxEx.dll"
  Delete "$INSTDIR\Patterson.Windows.Forms.dll"
  Delete "$INSTDIR\SmartSearch.dll"
  Delete "$INSTDIR\BLS.TextEditor.dll"
  Delete "$INSTDIR\DevGrepResources.dll"
  Delete "$INSTDIR\DGTe.dll"
  Delete "$INSTDIR\Ionic.Zip.dll"
  Delete "$INSTDIR\UpdateCheck.exe"
  Delete "$INSTDIR\BLS.JSON.dll"
  Delete "$INSTDIR\BLS.Search.Web.dll"
  Delete "$INSTDIR\DevGrep.exe"
Delete "$INSTDIR\DevGrep.exe.config"
  Delete "$SMPROGRAMS\DevGrep\Uninstall.lnk"
  Delete "$SMPROGRAMS\DevGrep\Website.lnk"
  Delete "$DESKTOP\DevGrep.lnk"
  Delete "$SMPROGRAMS\DevGrep\DevGrep.lnk"

  RMDir "$SMPROGRAMS\DevGrep"
  RMDir "$INSTDIR\Templates\"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  DeleteRegKey HKCR "Directory\shell\DevGrepSearch"
  DeleteRegKey HKCR "Drive\shell\DevGrepSearch"
    DeleteRegKey HKCR ".dgb"
  DeleteRegKey HKCR "DevGrep.Document" 
  SetAutoClose true
SectionEnd

;Check for .NET framework
Function CheckFrameWork

   ;Save the variables in case something else is using them
  Push $0
  Push $1
  Push $2
  Push $3
  Push $4
  Push $R1
  Push $R2
  Push $R3
  Push $R4
  Push $R5
  Push $R6
  Push $R7
  Push $R8

  StrCpy $R5 "0"
  StrCpy $R6 "0"
  StrCpy $R7 "0"
  StrCpy $R8 "0.0.0"
  StrCpy $0 0

  loop:

  ;Get each sub key under "SOFTWARE\Microsoft\NET Framework Setup\NDP"
  EnumRegKey $1 HKLM "SOFTWARE\Microsoft\NET Framework Setup\NDP" $0
  StrCmp $1 "" done ;jump to end if no more registry keys
  IntOp $0 $0 + 1
  StrCpy $2 $1 1 ;Cut off the first character
  StrCpy $3 $1 "" 1 ;Remainder of string

  ;Loop if first character is not a 'v'
  StrCmpS $2 "v" start_parse loop

  ;Parse the string
  start_parse:
  StrCpy $R1 ""
  StrCpy $R2 ""
  StrCpy $R3 ""
  StrCpy $R4 $3

  StrCpy $4 1

  parse:
  StrCmp $3 "" parse_done ;If string is empty, we are finished
  StrCpy $2 $3 1 ;Cut off the first character
  StrCpy $3 $3 "" 1 ;Remainder of string
  StrCmp $2 "." is_dot not_dot ;Move to next part if it's a dot

  is_dot:
  IntOp $4 $4 + 1 ; Move to the next section
  goto parse ;Carry on parsing

  not_dot:
  IntCmp $4 1 major_ver
  IntCmp $4 2 minor_ver
  IntCmp $4 3 build_ver
  IntCmp $4 4 parse_done

  major_ver:
  StrCpy $R1 $R1$2
  goto parse ;Carry on parsing

  minor_ver:
  StrCpy $R2 $R2$2
  goto parse ;Carry on parsing

  build_ver:
  StrCpy $R3 $R3$2
  goto parse ;Carry on parsing

  parse_done:

  IntCmp $R1 $R5 this_major_same loop this_major_more
  this_major_more:
  StrCpy $R5 $R1
  StrCpy $R6 $R2
  StrCpy $R7 $R3
  StrCpy $R8 $R4

  goto loop

  this_major_same:
  IntCmp $R2 $R6 this_minor_same loop this_minor_more
  this_minor_more:
  StrCpy $R6 $R2
  StrCpy $R7 R3
  StrCpy $R8 $R4
  goto loop

  this_minor_same:
  IntCmp $R3 $R7 loop loop this_build_more
  this_build_more:
  StrCpy $R7 $R3
  StrCpy $R8 $R4
  goto loop

  done:

  ;Have we got the framework we need?
  IntCmp $R5 ${MIN_FRA_MAJOR} max_major_same fail OK
  max_major_same:
  IntCmp $R6 ${MIN_FRA_MINOR} max_minor_same fail OK
  max_minor_same:
  IntCmp $R7 ${MIN_FRA_BUILD} OK fail OK

  ;Version on machine is greater than what we need
  OK:
  StrCpy $0 "1"
  goto end

  fail:
  StrCmp $R8 "0.0.0" end


  end:

  ;Pop the variables we pushed earlier
  Pop $R8
  Pop $R7
  Pop $R6
  Pop $R5
  Pop $R4
  Pop $R3
  Pop $R2
  Pop $R1
  Pop $4
  Pop $3
  Pop $2
  Pop $1
FunctionEnd
;Function CloseApp
;Push $5
;
;push "devgrep.exe"
;  processwork::existsprocess
;  pop $5
;  IntCmp $5 0 done
;  
;  push "devgrep.exe"
;  processwork::KillProcess
;
;done:
;Pop $5
;FunctionEnd

;Function un.CloseApp
;Push $5
;
;push "devgrep.exe"
;  processwork::existsprocess
;  pop $5
;  IntCmp $5 0 done
;
;  push "devgrep.exe"
;  processwork::KillProcess
;
;done:
;Pop $5
;FunctionEnd
